name: Check

on: [push]

jobs:
  cargo:
    env:
      CI: true
    runs-on: ubuntu-latest
    container: rustlang/rust:nightly-bullseye

    services:
      redis:
        image: redis
      postgres:
        image: ghcr.io/mythal/boluo-postgres:latest
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: boluo

    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            server:
              - 'server/**'

      - uses: Swatinem/rust-cache@v2
        if: steps.changes.changes[0] != null

      - name: Build server
        if: steps.changes.outputs.server == 'true'
        run: cargo build -p server

      - name: Init Database
        if: steps.changes.outputs.server == 'true'
        run: cargo run --bin manage init
        env:
          DATABASE_URL: postgresql://postgres:postgres@postgres/boluo

      - name: test
        if: steps.changes.outputs.server == 'true'
        run: cargo test
        env:
          DATABASE_URL: postgresql://postgres:postgres@postgres/boluo
          TEST_DATABASE_URL: postgresql://postgres:postgres@postgres/boluo
          SECRET: SOME_SECRET
          REDIS_URL: redis://redis/
          DEBUG: 1
          PORT: 3000

  nx:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    env:
      CI: true

    steps:
      - uses: actions/checkout@v3
        with:
          # 0 indicates all history for all branches and tags.
          fetch-depth: 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: master

      - name: build
        run: pnpm build:affected

      - name: test
        run: pnpm test:affected
